<UserControl x:Class="AwqatSalaat.UI.Views.WidgetSummary"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ui="clr-namespace:AwqatSalaat.UI"
             xmlns:local="clr-namespace:AwqatSalaat.UI.Views"
             xmlns:converters="clr-namespace:AwqatSalaat.UI.Converters"
             xmlns:vm="clr-namespace:AwqatSalaat.ViewModels;assembly=AwqatSalaat.Common"
             xmlns:controls="clr-namespace:AwqatSalaat.UI.Controls"
             xmlns:mk="clr-namespace:AwqatSalaat.Markup"
             mc:Ignorable="d" 
             d:DesignHeight="40" d:DesignWidth="118" d:Background="#192025" UseLayoutRounding="True">
    <UserControl.DataContext>
        <vm:WidgetViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemeDictionary>
                    <d:ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="../Themes/Dark.xaml"/>
                    </d:ResourceDictionary.MergedDictionaries>
                </ui:ThemeDictionary>
            </ResourceDictionary.MergedDictionaries>

            <GridLength x:Key="ZeroGridLength">0</GridLength>
            <GridLength x:Key="MaxGridLength">54</GridLength>
            <GridLength x:Key="StarGridLength">*</GridLength>
            <Thickness x:Key="ZeroThickness">0</Thickness>
            <HorizontalAlignment x:Key="StretchAlignment">Stretch</HorizontalAlignment>

            <BooleanToVisibilityConverter x:Key="BoolVisConverter"/>
            <converters:BoolToVisibilityInvertedConverter x:Key="BoolVisInvConverter"/>
            <converters:BoolInverterConverter x:Key="BoolInverterConverter"/>
            <converters:ShortTimeConverter x:Key="ShortTimeConverter"/>
            <converters:TimeSpanFormatConverter x:Key="TimeSpanFormatConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeColors.TextPrimaryBrush}"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding DisplayedTime.State}" Value="Near"/>
                        <Condition Binding="{Binding IsRefreshing}" Value="False"/>
                        <Condition Binding="{Binding HasError}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Name="an">
                            <Storyboard RepeatBehavior="Forever">
                                <ColorAnimation To="{StaticResource ThemeColors.AccentColor}" Duration="0:0:2" Storyboard.TargetProperty="(UserControl.Background).(SolidColorBrush.Color)" AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="an"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding DisplayedTime.State}" Value="EnteredRecently"/>
                        <Condition Binding="{Binding IsRefreshing}" Value="False"/>
                        <Condition Binding="{Binding HasError}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource ThemeColors.FillCriticalBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ThemeColors.TextOnAccentBrush}"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CountdownStates">
                <VisualState x:Name="WithSeconds">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="gap" Storyboard.TargetProperty="MaxWidth" From="0" To="6" Duration="0:0:.1"/>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="WithoutSeconds">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="gap" Storyboard.TargetProperty="MaxWidth" To="0" Duration="0:0:.1"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="DisplayModes">
                <VisualState x:Name="Default" />
                <VisualState x:Name="CompactNoCountdown">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="startPanel" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness Left="2" Right="2"/>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="startPanel" Storyboard.TargetProperty="HorizontalAlignment" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource StretchAlignment}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="startText" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroThickness}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="errorPanel" Storyboard.TargetProperty="HorizontalAlignment" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource StretchAlignment}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="errorPanel" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroThickness}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="errorText" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroThickness}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Storyboard.TargetName="errorIco" Storyboard.TargetProperty="FontSize" To="16" Duration="0"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gap" Storyboard.TargetProperty="Width" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col2" Storyboard.TargetProperty="Width" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Compact">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="startPanel" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame>
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness Left="2" Right="2"/>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="startPanel" Storyboard.TargetProperty="HorizontalAlignment" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource StretchAlignment}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="startText" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroThickness}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="errorPanel" Storyboard.TargetProperty="HorizontalAlignment" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource StretchAlignment}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="errorPanel" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroThickness}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="errorText" Storyboard.TargetProperty="Margin" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroThickness}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Storyboard.TargetName="errorIco" Storyboard.TargetProperty="FontSize" To="16" Duration="0"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="gap" Storyboard.TargetProperty="Width" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col1" Storyboard.TargetProperty="Width" Duration="0:0:9" RepeatBehavior="Forever">
                            <DiscreteObjectKeyFrame KeyTime="0:0:5" Value="{StaticResource ZeroGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="col2" Storyboard.TargetProperty="Width" Duration="0:0:9" RepeatBehavior="Forever">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ZeroGridLength}"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:5" Value="{StaticResource MaxGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CompactHorizontal">
                    <Storyboard>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="timeTB" Storyboard.TargetProperty="(Grid.Column)" Duration="0">
                            <LinearInt32KeyFrame Value="2"/>
                        </Int32AnimationUsingKeyFrames>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="timeTB" Storyboard.TargetProperty="(Grid.Row)" Duration="0">
                            <LinearInt32KeyFrame Value="0"/>
                        </Int32AnimationUsingKeyFrames>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="afterTB" Storyboard.TargetProperty="(Grid.Column)" Duration="0">
                            <LinearInt32KeyFrame Value="0"/>
                        </Int32AnimationUsingKeyFrames>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="afterTB" Storyboard.TargetProperty="(Grid.Row)" Duration="0">
                            <LinearInt32KeyFrame Value="1"/>
                        </Int32AnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row1" Storyboard.TargetProperty="Height" Duration="0:0:9" RepeatBehavior="Forever">
                            <DiscreteObjectKeyFrame KeyTime="0:0:5" Value="{StaticResource ZeroGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row2" Storyboard.TargetProperty="Height" Duration="0:0:9" RepeatBehavior="Forever">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ZeroGridLength}"/>
                            <DiscreteObjectKeyFrame KeyTime="0:0:5" Value="{StaticResource StarGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CompactHorizontalNoCountdown">
                    <Storyboard>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="timeTB" Storyboard.TargetProperty="(Grid.Column)" Duration="0">
                            <LinearInt32KeyFrame Value="2"/>
                        </Int32AnimationUsingKeyFrames>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="timeTB" Storyboard.TargetProperty="(Grid.Row)" Duration="0">
                            <LinearInt32KeyFrame Value="0"/>
                        </Int32AnimationUsingKeyFrames>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="afterTB" Storyboard.TargetProperty="(Grid.Column)" Duration="0">
                            <LinearInt32KeyFrame Value="0"/>
                        </Int32AnimationUsingKeyFrames>
                        <Int32AnimationUsingKeyFrames Storyboard.TargetName="afterTB" Storyboard.TargetProperty="(Grid.Row)" Duration="0">
                            <LinearInt32KeyFrame Value="1"/>
                        </Int32AnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="row2" Storyboard.TargetProperty="Height" Duration="0">
                            <DiscreteObjectKeyFrame Value="{StaticResource ZeroGridLength}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ToggleButton x:Name="toggle" BorderThickness="0" Foreground="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=Foreground}" Padding="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsEnabled="{Binding ElementName=popup, Path=IsOpen, Converter={StaticResource BoolInverterConverter}}">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeColors.ControlHoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ThemeColors.ControlPressedBackgroundBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <Grid>
                <Grid x:Name="grid" MaxHeight="40" Margin="4" d:Visibility="Visible" Visibility="{Binding WidgetSettings.Settings.IsConfigured, Converter={StaticResource BoolVisConverter}}">
                    <Grid d:Visibility="Visible" Visibility="{Binding HasError, Converter={StaticResource BoolVisInvConverter}}">
                        <Grid HorizontalAlignment="Center" Visibility="{Binding IsRefreshing, Converter={StaticResource BoolVisInvConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="col1" Width="50" MaxWidth="50"/>
                                <ColumnDefinition x:Name="gap" Width="6" MaxWidth="6"/>
                                <ColumnDefinition x:Name="col2" Width="54" MaxWidth="54"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="row1"/>
                                <RowDefinition x:Name="row2"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="{Binding DisplayedTime.Name, FallbackValue=NAME}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock x:Name="timeTB" d:Text="00:59 AM" Text="{Binding DisplayedTime.Time, Converter={StaticResource ShortTimeConverter}, FallbackValue=TIME}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1"/>

                            <TextBlock x:Name="afterTB" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="{mk:L11n UI.Summary.After}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DisplayedTime.State}" Value="EnteredRecently">
                                                <Setter Property="Text" Value="{mk:L11n UI.Summary.Since}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="1" FlowDirection="LeftToRight">
                                <TextBlock Text="+" d:Visibility="Visible">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DisplayedTime.State}" Value="EnteredRecently">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock d:Text="99:99:99">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource TimeSpanFormatConverter}" FallbackValue="COUNTDOWN" TargetNullValue="COUNTDOWN">
                                            <Binding Path="DisplayedTime.Countdown"/>
                                            <Binding Path="WidgetSettings.CountdownFormat"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
                <TextBlock
                    Text="{mk:L11n UI.Summary.Refreshing}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    TextAlignment="Center"
                    TextWrapping="Wrap"
                    Margin="2,0"
                    Visibility="{Binding IsRefreshing, Converter={StaticResource BoolVisConverter}}"
                    d:Visibility="Visible"/>
                <ProgressBar
                    IsIndeterminate="True"
                    Background="Transparent"
                    Foreground="{DynamicResource ThemeColors.TextPrimaryBrush}"
                    BorderThickness="0"
                    Height="2"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding IsRefreshing, Converter={StaticResource BoolVisConverter}}"
                    d:Visibility="Visible"/>
                <DockPanel
                    x:Name="errorPanel"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Margin="3,0"
                    Visibility="{Binding HasError, Converter={StaticResource BoolVisConverter}}"
                    d:Visibility="Visible">
                    <TextBlock x:Name="errorIco" Text="&#xE7BA;" FontFamily="Segoe MDL2 Assets" FontSize="20" Foreground="{DynamicResource ThemeColors.TextHighlightBrush}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="errorText" Text="{mk:L11n UI.Summary.ErrorOccured}" TextAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" Margin="8,0,0,0"/>
                </DockPanel>
                <DockPanel
                    x:Name="startPanel"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Margin="4,0"
                    Visibility="{Binding WidgetSettings.Settings.IsConfigured, Converter={StaticResource BoolVisInvConverter}}"
                    d:Visibility="Visible">
                    <TextBlock Text="&#xE7BA;" FontFamily="Segoe MDL2 Assets" FontSize="20" Foreground="{DynamicResource ThemeColors.TextHighlightBrush}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="startText" Text="{mk:L11n UI.Summary.TapToStart}" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Margin="8,0,0,0"/>
                </DockPanel>
            </Grid>
        </ToggleButton>
        <controls:AcrylicPopup
            x:Name="popup"
            AllowsTransparency="True"
            StaysOpen="False"
            IsOpen="{Binding ElementName=toggle, Path=IsChecked, Mode=TwoWay}"
            PopupAnimation="Fade"
            Placement="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:WidgetSummary}, Path=PanelPlacement}">
            <Grid Background="#01000000" MaxHeight="700" TextElement.FontSize="14" TextElement.Foreground="{DynamicResource ThemeColors.TextPrimaryBrush}">
                <local:WidgetPanel MinWidth="200" Visibility="{Binding WidgetSettings.IsOpen, Converter={StaticResource BoolVisInvConverter}}"/>
                <Grid DataContext="{Binding WidgetSettings}" Visibility="{Binding IsOpen, Converter={StaticResource BoolVisConverter}}" MinWidth="300" MaxWidth="800" MinHeight="300" Margin="0,8,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <local:SettingsPanel Grid.RowSpan="2" ParentPopup="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:AcrylicPopup}}"/>
                    <TextBlock Text="{mk:L11n UI.Panel.Settings}" Foreground="{DynamicResource ThemeColors.TextSecondaryBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="8,0,0,0"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,8,0">
                        <Button Style="{DynamicResource IconButtonStyle}" Content="&#xE711;" Command="{Binding Cancel}" ToolTip="{mk:L11n UI.Settings.Cancel}"/>
                        <Button Style="{DynamicResource IconButtonStyle}" Content="&#xE8FB;" Command="{Binding Save}" ToolTip="{mk:L11n UI.Settings.Confirm}"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </controls:AcrylicPopup>
    </Grid>
</UserControl>
