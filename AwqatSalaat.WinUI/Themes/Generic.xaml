<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:AwqatSalaat.WinUI.Controls"
    xmlns:converters="using:AwqatSalaat.WinUI.Converters"
    xmlns:mk="using:AwqatSalaat.WinUI.Markup">

    <converters:CustomDateTimeConverter x:Key="CustomDateTimeConverter"/>
    <converters:BooleanInvertedConverter x:Key="BooleanInvertedConverter"/>

    <Style x:Key="TextBlockButtonStyle" TargetType="ButtonBase">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorDefaultBrush}" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="Text"
                                   Text="{TemplateBinding Content}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Text.TextDecorations" Value="Underline"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Text.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Text.Foreground" Value="{ThemeResource TextOnAccentFillColorDisabledBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:PrayerTimeItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PrayerTimeItem">
                    <Border x:Name="root" CornerRadius="{ThemeResource ControlCornerRadius}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Default">
                                <VisualState x:Name="Coming"/>
                                <VisualState x:Name="Next">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextHighlightColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="glyph.Glyph" Value="&#xE751;"/>
                                        <Setter Target="glyph.MirroredWhenRightToLeft" Value="True"/>
                                        <Setter Target="glyphcontainer.RenderTransform">
                                            <Setter.Value>
                                                <ScaleTransform ScaleX="-1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Near">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextOnAccentFillColorDefaultBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="glyph.Glyph" Value="&#xE7BA;"/>
                                        <Setter Target="dismissBtn.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Elapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextFillColorSecondaryBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <VisualState.Setters>
                                        <Setter Target="glyph.Glyph" Value="&#xE73E;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="4" ColumnDefinitions="24,*,Auto,Auto">
                            <Border x:Name="glyphcontainer" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin=".5,.5">
                                <FontIcon x:Name="glyph" Glyph="&#xE823;" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" FontSize="16"/>
                            </Border>
                            <TextBlock Text="{TemplateBinding PrayerName}" Grid.Column="1" VerticalAlignment="Center"/>
                            <Button x:Name="dismissBtn" Style="{StaticResource TextBlockButtonStyle}" Padding="0" Content="{mk:L11n Key=UI.Panel.Dismiss}" Command="{Binding DismissCommand, RelativeSource={RelativeSource TemplatedParent}}" Margin="16,0" Grid.Column="2" Visibility="Collapsed"/>
                            <TextBlock Text="{Binding TimeString, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:SettingsItem" x:Key="DefaultSettingsItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:SettingsItem">
                    <StackPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.StateTriggers>
                                        <StateTrigger IsActive="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanInvertedConverter}}"/>
                                    </VisualState.StateTriggers>
                                    <VisualState.Setters>
                                        <Setter Target="contentpresenter.Foreground" Value="{ThemeResource TextFillColorTertiaryBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Content="{TemplateBinding Header}"/>
                        <TextBlock Text="{TemplateBinding Description}"
                                   Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                   TextWrapping="Wrap"
                                   Margin="0,8"/>
                        <ContentPresenter x:Name="contentpresenter"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:SettingsItem" BasedOn="{StaticResource DefaultSettingsItemStyle}"/>
</ResourceDictionary>
