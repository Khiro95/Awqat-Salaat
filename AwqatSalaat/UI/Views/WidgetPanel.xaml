<UserControl x:Class="AwqatSalaat.UI.Views.WidgetPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:api="clr-namespace:AwqatSalaat.DataModel.IslamicFinderApi"
             xmlns:vm="clr-namespace:AwqatSalaat.UI.ViewModels"
             xmlns:controls="clr-namespace:AwqatSalaat.UI.Controls"
             xmlns:converters="clr-namespace:AwqatSalaat.UI.Converters"
             mc:Ignorable="d" 
             d:DesignWidth="200" d:Background="#444" d:FlowDirection="RightToLeft" d:TextElement.Foreground="White" d:TextElement.FontSize="14">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="ApiMethodEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="{x:Type api:Method}"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <BooleanToVisibilityConverter x:Key="BoolVisConverter"/>
        <converters:BoolToVisibilityInvertedConverter x:Key="BoolVisInvConverter"/>
        <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>

        <Style TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinWidth" Value="32"/>
            <Setter Property="MinHeight" Value="32"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#16FFFFFF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#20FFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#50FFFFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="ButtonAltStyle">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <TextBlock x:Name="tb" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="tb" Property="TextDecorations" Value="Underline"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#20FFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#50FFFFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="20" Width="40" CornerRadius="10" VerticalAlignment="Center">
                                    <Ellipse x:Name="thumb" Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" Fill="{TemplateBinding BorderBrush}" Margin="3"/>
                                </Border>
                                <ContentPresenter VerticalAlignment="Center" Margin="8,0,0,0" Grid.Column="1"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="Tan"/>
                                <!--<Setter Property="BorderBrush" Value="Gold"/>-->
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter TargetName="thumb" Property="HorizontalAlignment" Value="Right"/>
                                <Setter TargetName="thumb" Property="Fill" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="thumb" Property="HorizontalAlignment" Value="Left"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Content" Value="معطل"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="نشط"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <d:UserControl.DataContext>
        <vm:WidgetViewModel />
    </d:UserControl.DataContext>
    <StackPanel Margin="8">
        <Grid d:Visibility="Visible" Visibility="{Binding WidgetSettings.IsOpen, Converter={StaticResource BoolVisInvConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition MinHeight="243"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="أوقات الصلاة" VerticalAlignment="Center"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Button Content="&#xE713;" Command="{Binding OpenSettings}" ToolTip="إعدادات" d:IsEnabled="False"/>
                <Button Content="&#xE72C;" Command="{Binding Refresh}" ToolTip="تحديث"/>
            </StackPanel>
            <Grid Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding HasError, Converter={StaticResource BoolVisInvConverter}}">
                <Grid Visibility="{Binding IsRefreshing, Converter={StaticResource BoolVisInvConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
                        <TextBlock Text="{Binding DisplayedDate, StringFormat='dddd'}" Foreground="DarkGray" d:Language="en" Language="ar" Margin="0,4" HorizontalAlignment="Center"/>
                        <TextBlock Text="{Binding DisplayedDate, StringFormat='dd MMMM yyyy'}" d:Text="28 صفر 1445" Foreground="DarkGray" d:Language="en" Language="ar" Margin="0,4" HorizontalAlignment="Center"/>
                        <TextBlock Text="{Binding DisplayedDate, StringFormat='الموافق لـ \{0:yyyy/MM/d\}'}" Foreground="#60FFFFFF" Margin="0,4" HorizontalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" TextBlock.Foreground="DarkGray" Margin="0,4" HorizontalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="2" FlowDirection="LeftToRight">
                        <TextBlock d:Text="City" Text="{Binding City}"/>
                        <TextBlock Text="-" Margin="4,0"/>
                        <TextBlock d:Text="Country" Text="{Binding Country}"/>
                    </StackPanel>
                    <ItemsControl ItemsSource="{Binding Items}" Grid.Row="2" Grid.ColumnSpan="2" Grid.IsSharedSizeScope="True">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsElapsed}" Value="True">
                                                    <Setter Property="TextElement.Foreground" Value="LightGray"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsNext}" Value="True">
                                                    <Setter Property="TextElement.Foreground" Value="Gold"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsTimeClose}" Value="True">
                                                    <Setter Property="Background" Value="Tan"/>
                                                    <Setter Property="TextElement.Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid Margin="4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="TimeCol"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="0,0,8,0" FontSize="16" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsElapsed}" Value="True">
                                                            <Setter Property="Text" Value="&#xE73E;"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsElapsed}" Value="False">
                                                            <Setter Property="Text" Value="&#xE74B;"/>
                                                            <Setter Property="Text" Value="&#xE823;"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsNext}" Value="True">
                                                            <Setter Property="Text" Value="&#xE751;"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsTimeClose}" Value="True">
                                                            <Setter Property="Text" Value="&#xE7BA;"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Text="{Binding Name}" Grid.Column="1"/>
                                        <Button Content="تجاهل" Command="{Binding DismissNotification}" Style="{StaticResource ButtonAltStyle}" Margin="8,0,16,0" Grid.Column="2" d:Visibility="Visible" Visibility="{Binding IsTimeClose, Converter={StaticResource BoolVisConverter}}"/>
                                        <TextBlock Text="{Binding Time, StringFormat=HH:mm}" Grid.Column="3" HorizontalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>
            <TextBlock
                Text="جاري التحديث..."
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Visibility="{Binding IsRefreshing, Converter={StaticResource BoolVisConverter}}"/>
            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Visibility="{Binding HasError, Converter={StaticResource BoolVisConverter}}"
                d:Visibility="Hidden">
                <TextBlock Text="خطأ" HorizontalAlignment="Center" Foreground="Gray"/>
                <TextBlock Text="{Binding ErrorMessage}" d:Text="Something wrong happened, please check the settings and try again" TextAlignment="Center" TextWrapping="Wrap" Margin="8"/>
            </StackPanel>
        </Grid>
        <Grid DataContext="{Binding WidgetSettings}" d:Visibility="Visible" Visibility="{Binding IsOpen, Converter={StaticResource BoolVisConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="إعدادات" VerticalAlignment="Center"/>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Button Content="&#xE711;" Command="{Binding Cancel}" ToolTip="إلغاء"/>
                <Button Content="&#xE8FB;" Command="{Binding Save}" ToolTip="تأكيد"/>
            </StackPanel>
            <StackPanel DataContext="{Binding Settings}" Grid.Row="2" Grid.ColumnSpan="2">
                <StackPanel.Resources>
                    <Style TargetType="controls:SettingsItem">
                        <Setter Property="Margin" Value="0,16,0,0"/>
                    </Style>
                </StackPanel.Resources>
                <controls:SettingsItem Header="اظهار العد التنازلي" Description="تحديد ما اذا كان العد التنازلي يظهر جنب وقت الصلاة القادمة على شريط المهام" Margin="0">
                    <CheckBox IsChecked="{Binding ShowCountdown}"/>
                </controls:SettingsItem>
                <controls:SettingsItem Header="توقيت الاشعار" Description="عدد الدقائق التي تسبق دخول الوقت ويبدأ عندها الاشعار. القيمة 0 تعني تعطيل الاشعار">
                    <controls:NumericUpDown Value="{Binding NotificationDistance}" Maximum="720" Width="100" HorizontalAlignment="Left"/>
                </controls:SettingsItem>
                <controls:SettingsItem Header="رمز البلد" Description="الرمز مكون من حرفين باللاتينية. (مثال: الرمز DZ يدل على الجزائر)">
                    <TextBox Text="{Binding CountryCode}" MaxLength="2" Width="50" HorizontalAlignment="Left"/>
                </controls:SettingsItem>
                <controls:SettingsItem Header="الرمز البريدي" Description="هذا الرمز يستخدم لتحديد المدينة ويختلف شكله من بلد لآخر">
                    <TextBox Text="{Binding ZipCode}" Width="100" HorizontalAlignment="Left"/>
                </controls:SettingsItem>
                <controls:SettingsItem Header="الطريقة" Description="طريقة حساب الوقت باستخدام خطوط الطول والعرض وميل الشمس ومعطيات أخرى">
                    <ComboBox ItemsSource="{Binding Source={StaticResource ApiMethodEnum}}" SelectedItem="{Binding Method}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource EnumDescriptionConverter}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </controls:SettingsItem>
            </StackPanel>
        </Grid>
    </StackPanel>
</UserControl>
